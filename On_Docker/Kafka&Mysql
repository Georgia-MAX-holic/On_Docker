{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNv4FdEPzsCxzlcQD4sqi37",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Georgia-MAX-holic/On_Docker/blob/main/On_Docker/Kafka%26Mysql\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://wecandev.tistory.com/109 본 블로그를 이용하여 공부하였음:"
      ],
      "metadata": {
        "id": "djapJjxc1SNK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Kafka connect=> 데이터 통합 프레임 워크  \n",
        "Kafka connect => Kafka_connector가 동작하도록 실행해주는 프로세스 \n",
        "\n",
        "Kafka connect 에는 Source connector 와 Sink connector가 있음 \n",
        "\n",
        "요약 : Source Connector는 Producer의 역할\n",
        "       Sink connector는 Consumer의 역할 \n",
        "\n",
        "\n",
        "    Source Connector : 외부시스템 -> 커넥트 -> 카프카\n",
        "    Sink Connector : 카프카 -> 커넥트 -> 외부 시스템\n",
        "\n",
        "\n",
        "Debezium => 카프카 커넥트 기반의 플러그인 데이터 변경 캡쳐를 위하여 사용됨 \n",
        "\n",
        "    구축 목표 : MySQL => \n",
        "    Kafka Connect(Source Connector,Debezium) => kafka"
      ],
      "metadata": {
        "id": "aSEeFedM2T27"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "docker-compose.yml 작성"
      ],
      "metadata": {
        "id": "Cu2kCfRBErga"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "version: '3' \n",
        "# 버전 3으로 \n",
        "services:\n",
        "  mysql:   \n",
        "    image: mysql:8.0         #이미지는 MySQL 8.0 버전\n",
        "    container_name: mysql    #컨테이너 이름 => mysql\n",
        "    ports\n",
        "      - 3306:3306            #3306 포트로 입력\n",
        "\n",
        "    environment:\n",
        "      MYSQL_ROOT_PASSWORD: admin  #비밀번호\n",
        "      MYSQL_USER: mysqluse\n",
        "      MYSQL_PASSWORD: mysqlpw \n",
        "\n",
        "    command:\n",
        "      - --character-set-server=utf8mb4\n",
        "      - --collation-server=utf8mb4_unicode_ci\n",
        "\n",
        "    volumes:\n",
        "      - D:/mysql/data:/var/lib/mysql\n",
        "호\n",
        "  zookeeper:\n",
        "    container_name: zookeeper  #컨테이너 이름 => zookeeper\n",
        "    image: wurstmeister/zookeeper  # 이미지 zookeeper\n",
        "    ports:\n",
        "      - \"2181:2181\"   #포트 2181\n",
        "\n",
        "  kafka:\n",
        "    container_name: kafka  #컨테이너 이름 kafka\n",
        "    image: wurstmeister/kafka  #이미지 kafka\n",
        "\n",
        "    depends_on:\n",
        "      - zookeeper   #zookeeper 먼저 실행되고 실행되도록\n",
        "\n",
        "    ports:\n",
        "      - \"9092:9092\" # 포트 9092\n",
        "\n",
        "    environment:\n",
        "      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1   #호스트 \n",
        "      KAFKA_ADVERTISED_PORT: 9092    #포트 9092\n",
        "      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  #주키퍼와 연결\n",
        "\n",
        "    volumes:\n",
        "      - /var/run/docker.sock:/var/run/docker.sock"
      ],
      "metadata": {
        "id": "tkxf1YGYEq4u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "컴포즈 실행 \n",
        "\n",
        "    docker-compose -f docker-compose.yml up -d "
      ],
      "metadata": {
        "id": "NDIOYgN61nGJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "데이터 베이스 및 테스트용 테이블 생성 \n",
        "\n",
        "[아직 MySQL에 대하여 공부를 진행하지 않아 이해가 어려웠음 ,\n",
        "다음 공부 계획은 MySQL로 목표를 잡을것]\n",
        " \n",
        "     mysql -u root -p"
      ],
      "metadata": {
        "id": "wVcFh0851waa"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "    create database testdb;\n",
        "    use testdb;"
      ],
      "metadata": {
        "id": "akJwunRU3-Cy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "CREATE TABLE accounts (\n",
        "   account_id VARCHAR(255),\n",
        "   role_id VARCHAR(255),\n",
        "   user_name VARCHAR(255),\n",
        "   user_description VARCHAR(255),\n",
        "   update_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n",
        "   PRIMARY KEY (account_id)\n",
        ");"
      ],
      "metadata": {
        "id": "fKNlR6Ve3MBA"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "    use mysql;\n",
        "\n",
        "  mysqluser 가 추가 되어 있는지 확인 \n",
        "\n",
        "    select host, user from user;\n",
        "\n",
        "  mysqluser 에 권한 부여\n",
        "\n",
        "    GRANT ALL PRIVILEGES ON *.* TO 'mysqluser'@'%';\n",
        "  \n",
        "    FLUSH PRIVILEGES;"
      ],
      "metadata": {
        "id": "ORQFtnaS4OYK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Debezium Connector for MySQL 플러그인\n",
        "\n",
        "MYSQL을 위한 커넥터 플러그인 , "
      ],
      "metadata": {
        "id": "0mMzdLj-5XCD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "로컬에서  /opt/kafka_2.13-2.8.1/ 경로에 connectors 폴더를 만들고\n",
        "\n",
        "    debezium-connector-mysql-1.5.4.Final-plugin.tar.gz   \n",
        "를 업로드\n",
        "\n",
        "    docker cp debezium-connector-mysql-1.5.4.Final-plugin.\n",
        "    tar.gz kafka:/opt/kafka_2.13-2.8.1/connectors/\n",
        "    debezium-connector-mysql-1.5.4.Final-plugin.tar.gz"
      ],
      "metadata": {
        "id": "7Zmqbu_K6Kxb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "압축 해제 \n",
        "\n",
        "    cd /opt/kafka_2.13-2.7.1/connectors\n",
        "    tar -zxvf debezium-connector-mysql-1.5.4.Final-plugin. \n",
        "    tar.gz\n",
        "\n"
      ],
      "metadata": {
        "id": "N4VlYz4O69ZR"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ThHKTXrY2Ti8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "V-C46CD17GmQ"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "h_hUnMqD2I80"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QXPtFjLlBY0W",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c7dfd74a-49c4-4d69-a919-3bc6909913a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "5\n",
            "4 1 5 2 3\n",
            "5\n",
            "1 3 7 9 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "nXHeSG5LW8Aj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "iZR11X9YUW4x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "BSvQxPpalUtb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8ItZwj6S-vSu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "O9vrX0FFlnk1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "c-hKdO3TlrZ-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MVC1UYwSlzLH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "YQoehRlll3kY"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}